<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyb.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.xiaoyb.domain.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<collection property="roleList" ofType="role">
			<id property="id" column="id" />
			<result property="rolename" column="rolename" />
			<collection property="permissionList" ofType="permission">
				<id property="id" column="id" />
				<result property="permissionname" column="permissionName" />
			</collection>
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		id, name, age, birthday, password
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="int">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="int">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.xiaoyb.domain.User">
		insert into user (id, name,
		age,
		birthday, password)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{birthday,jdbcType=DATE}, #{password,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyb.domain.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="password != null">
				password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyb.domain.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyb.domain.User">
		update user
		set
		name = #{name,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		birthday
		= #{birthday,jdbcType=DATE},
		password =
		#{password,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 根据用户名查找用户 -->
	<select id="findUserByLoginName" resultMap="BaseResultMap"
		parameterType="string">
		select
		u.id,u.name,u.age,u.birthday,u.password,r.id,r.rolename,p.id,p.permissionName from user
		u,user_role ur,role r,permission p
		where
		u.id=ur.userId and ur.roleId=r.id and p.roleId=r.id and u.name
		=#{username,jdbcType=VARCHAR}
	</select>
</mapper>